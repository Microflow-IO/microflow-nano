#!/bin/bash

upexec="/usr/local/bin/mfs-worker"
version="20241110-88-$($upexec -k)"

mfsConfDir="/etc/mfs"
mfsConfFile="$mfsConfDir/mfs.conf"
mfsConfTmpFile="$mfsConfDir/mfs-tmp.conf"
mfsConfShellFile="$mfsConfDir/mfs-conf.sh"

mfsTmpDir="/tmp/mfs"
test ! -e $mfsTmpDir && mkdir $mfsTmpDir

pidfile="/tmp/mfs-worker.sh.pid"
if [ -f "$pidfile" -a -n "$(ps -ef | awk '{print $2}' | grep -w $(cat $pidfile))" ]; then
  echo "mfs-worker.sh is running ..."
  exit 1
fi
echo $$ > $pidfile

rm -rf $upexec
tail -n +277 $0 > $upexec
chmod 755 $upexec
sleep 5

function runColl() {
  topfile="$mfsTmpDir/top.txt"
  cpufile="$mfsTmpDir/cpu.txt"
  procfile="$mfsTmpDir/proc.txt"
  jsonfile="$mfsTmpDir/json.txt"

  expdomain=`cat $mfsConfFile | grep exp-domain | grep -v grep | awk -F "=" '{print $2}'`
  procparam=`cat $mfsConfFile | grep proclist | grep -v grep | awk -F "=" '{print $2}'`
  
  top -b -n 2 | tail -n +7 | grep -A 1000000 "load" > $topfile
  cat $topfile | sed -n 1,7"p" > $cpufile
  cat $topfile | sed -n 8,1000000"p" > $procfile
  
  load=`cat $topfile | grep average | awk '{ print $(NF-2)}' | sed 's/,//g'`
  cpu=`cat $topfile  | grep Cpu     | sed 's/%/ /g' | awk '{ print $2 + $4 }'`
  cwa=`cat $topfile  | grep Cpu     | sed 's/%/ /g' | awk '{ print $10 }'`
  
  MemTotal=$(grep MemTotal /proc/meminfo | awk '{print$2}')
  MemAvailable=$(grep MemAvailable /proc/meminfo | awk '{print$2}')
  if [ -z "$MemAvailable" ]; then
    MemAvailable=$(grep MemFree /proc/meminfo | awk '{print$2}')
  fi
  mem=`echo $MemAvailable $MemTotal | awk '{printf ("%.1f\n", ($2-$1)/$2*100)}'`
  
  memusage=`free -g  | grep Mem     | awk '{print $2-$7}'`
  memtotal=`free -g  | grep Mem     | awk '{print $2+1}'`
  cpucore=`cat /proc/cpuinfo | grep "processor" | wc -l`
  
  sysarch=`arch`
  syskern=`uname -r`
  sysinfo=`cat /etc/os-release | head -n 1 | sed "s/\"//g" | awk -F "=" '{print $2}'`
  
  if [ -n "$(echo $cwa | grep wa | grep -v grep)" ]; then
    cwa=`cat $topfile  | grep Cpu     | sed 's/%/ /g' | awk '{ print $9 }'`
  fi
  
  monprocfile="$mfsTmpDir/monproc.txt"
  if [ -n "$(echo $procparam | grep "^[[:digit:]]*$")" ]; then
    cat $procfile | head -n $procparam | sed "s/[ ][ ]*/#/g" | sed "s/^#//g" > $monprocfile
  else
    grepstr="$(echo $procparam | sed "s/,/\\\|/g")"
    cat $procfile | grep "$grepstr" | sed "s/[ ][ ]*/#/g" | sed "s/^#//g" > $monprocfile
  fi
  
  use=$(df -BG | grep "^/dev" | sed "s/%//g" | sed "s/G//g" | awk '{sum+=$3} END {print sum}')
  disktotal=$(df -BG | grep "^/dev" | sed "s/%//g" | sed "s/G//g" | awk '{sum+=$2} END {print sum}')
  disk=$(echo $use $disktotal | awk '{OFMT="%.1f";print $1/$2*100}')
  
  # mfs-worker cpu and memory usage
  scpu=`ps aux | grep mfs-worker | grep -v sh | grep -v grep | head -n 1 | awk '{print $3}'`
  smem=`ps aux | grep mfs-worker | grep -v sh | grep -v grep | head -n 1 | awk '{print $4}'`
  
  if [ "$cpu" == "0" -o "$cpu" == "0.0" ]; then
    cpu=0.1
  fi

  mfs_cnt=$(ps -ef | grep -w mfs | grep "\-n" | grep "\-a" | grep -v worker | grep -v grep | wc -l)
  ps -ef | grep mfs-worker.sh | grep "\-n" | grep "\-a" | grep -v grep | wc -l > $mfsTmpDir/worker_sh_cnt
  worker_sh_cnt=$(cat $mfsTmpDir/worker_sh_cnt)
  worker_exec_cnt=$(ps -ef | grep mfs-worker | grep -v sh | grep "\-i\|@" | grep -v grep | wc -l)
  
  proclist=$(cat $monprocfile)
  for proc in $proclist; do
    ppid=`echo $proc | awk -F "#" '{ print $1 }'`
    psts=`echo $proc | awk -F "#" '{ print $8 }'`
    pcpu=`echo $proc | awk -F "#" '{ print $9 }'`
    pmem=`echo $proc | awk -F "#" '{ print $10 }'`
    name=`echo $proc | awk -F "#" '{ print $12 }'`
  
    echo -n "{"                                                                    >  $jsonfile
    echo -n "\"host\":                    \"$localIP\","                           >> $jsonfile
    echo -n "\"host_name\":               \"$(hostname)\","                        >> $jsonfile
    echo -n "\"host_cpu\":                \"$cpu\","                               >> $jsonfile
    echo -n "\"host_cpu_core\":           \"$cpucore\","                           >> $jsonfile
    echo -n "\"host_mem\":                \"$mem\","                               >> $jsonfile
    echo -n "\"host_mem_usage\":          \"$memusage\","                          >> $jsonfile
    echo -n "\"host_mem_total\":          \"$memtotal\","                          >> $jsonfile
    echo -n "\"host_load\":               \"$load\","                              >> $jsonfile
    echo -n "\"host_wa\":                 \"$cwa\","                               >> $jsonfile
    echo -n "\"host_disk_use\":           \"$use\","                               >> $jsonfile
    echo -n "\"host_disk_total\":         \"$disktotal\","                         >> $jsonfile
    echo -n "\"host_disk\":               \"$disk\","                              >> $jsonfile
    echo -n "\"proc_name\":               \"$name\","                              >> $jsonfile
    echo -n "\"proc_pid\":                \"$ppid\","                              >> $jsonfile
    echo -n "\"self_cpu\":                \"$scpu\","                              >> $jsonfile
    echo -n "\"self_mem\":                \"$smem\","                              >> $jsonfile
    echo -n "\"proc_cpu\":                \"$pcpu\","                              >> $jsonfile
    echo -n "\"proc_mem\":                \"$pmem\","                              >> $jsonfile
    echo -n "\"proc_sts\":                \"$psts\","                              >> $jsonfile
    echo -n "\"probe_ver\":               \"$version\","                           >> $jsonfile
    echo -n "\"mfs_cnt\":            \"$mfs_cnt\","                      >> $jsonfile
    echo -n "\"worker_sh_cnt\":           \"$worker_sh_cnt\","                     >> $jsonfile
    echo -n "\"worker_exec_cnt\":         \"$worker_exec_cnt\","                   >> $jsonfile
    echo -n "\"sys_info\":                \"$sysinfo-$sysarch\","                  >> $jsonfile
    echo -n "\"gl2_source_collector\":    \"$localmac\","                          >> $jsonfile
    echo -n "\"message-type\":            \"proc\","                               >> $jsonfile
    echo -n "\"message\":                 \"$(hostname)\""                         >> $jsonfile
    echo -n "}"                                                                    >> $jsonfile
    timeout 1 $upexec -p $expdomain $jsonfile
  done
}

function checkAutostart() {
  startCmd="$(ps -o command= -p $$)"

  serviceDir="/usr/lib/systemd/system"
  test ! -e "/usr/lib/systemd/system" && serviceDir="/lib/systemd/system"
  serviceFile="$serviceDir/mfs.service"

  if [ -e "$serviceDir" -a ! -e "$serviceFile" ]; then
    cat > $serviceFile << EOF
[Unit]
Description=mfs
Documentation=http://aidynamic.com
After=network-online.target firewalld.service
Wants=network-online.target

[Service]
Type=simple
User=root
Group=root
ExecStart=$startCmd
ExecStop=/bin/kill $MAINPID
KillMode=control-group
Restart=on-failure
StartLimitBurst=3
StartLimitInterval=60s

[Install]
WantedBy=multi-user.target
EOF
    systemctl daemon-reload
    systemctl enable mfs
  fi

  initFile="/etc/init.d/mfs"
  if [ ! -e "$serviceDir" -a ! -e "$serviceFile" -a ! -e "$initFile" ]; then
    cat > $initFile << EOF
#!/bin/bash
# chkconfig: 2345 90 10
# description: mfs service script

start() {
  echo "Starting mfs..."
  isrun=\$(ps -ef | grep -w mfs | grep "\-n" | grep "\-a" | grep -v worker | grep -v grep)
  if [ -z "\$isrun" ]; then
    nohup $startCmd > /dev/null 2>&1 &
    echo \$! > /var/run/mfs.pid  
    echo "mfs started with PID \$(cat /var/run/mfs.pid)"
  else
    echo "mfs already running with PID \$(cat /var/run/mfs.pid)"
  fi
}

stop() {
  if [ -f /var/run/mfs.pid ]; then
    PID=\$(cat /var/run/mfs.pid)
    echo "Stopping mfs with PID \$PID..."
    kill \$PID && rm -f /var/run/mfs.pid
    ps -ef | grep mfs-worker | grep -v sh | grep -v grep | awk '{print $2}' | xargs kill
    echo "mfs stopped."
  else
    echo "mfs is not running."
  fi
}

restart() {
  stop
  start
}

case "\$1" in
  start)
    start
    ;;
  stop)
    stop
    ;;
  restart)
    restart
    ;;
  *)
    echo "Usage: \$0 {start|stop|restart}"
    exit 1
esac

exit 0
EOF
    chmod +x $initFile
    if type chkconfig; then
      chkconfig --add mfs
      chkconfig mfs on
    elif type update-rc.d; then
      update-rc.d mfs start 90 2 3 4 5 .
    fi
  fi
}

function getNetworkInfo() {
  localnic=$(ip r | grep default | awk '{print $5}' | head -n 1)
  export localIP=`ip  addr show $localnic | grep -w inet | grep -v 127.0.0.1 | head -n 1 | awk '{print $2}' | awk -F "/" '{print $1}'`
  export hostname=`hostname`
  hostnamemd5=`hostname | md5sum | cut -b 1,2`
  localmac=`ip link show $localnic | grep ether | awk '{print $2}' | sed 's/://g' | sed 's/^/0x/g' | head -n 1`
  export localmac=`printf %lu $localmac""$hostnamemd5`
}

function getConfigInfo() {
  test ! -e "$mfsConfDir" && mkdir -p $mfsConfDir
  if [ ! -e "$mfsConfShellFile" ]; then
    cat > $mfsConfShellFile << EOF
curl -s http://stu.jxit.net.cn:88/uniprobe/mfs/linux/mfs.conf
EOF
  fi
  export confMfsStr=$(bash $mfsConfShellFile)
}

function processMfsConf() {
  if [ ! -f "$mfsConfFile" ]; then
    mkdir -p "$mfsConfDir" && touch "$mfsConfFile"
  fi

  printf "$confMfsStr\n" > $mfsConfTmpFile
  printf "probe-id=$localmac\n" >> $mfsConfTmpFile
  printf "sys-version=$version\n" >> $mfsConfTmpFile
  printf "host-address=$localIP\n" >> $mfsConfTmpFile

  diff $mfsConfTmpFile $mfsConfFile
  if [ $? -ne 0 ]; then
    ps -ef | grep mfs-worker | grep -v sh | grep -v grep | awk '{print $2}' | xargs kill
    cat $mfsConfTmpFile > $mfsConfFile
  fi
  haveworker=`ps -ef | grep mfs-worker | grep -v sh | grep -v grep | awk '{print $2}'`
  if [ -z "$haveworker" ]; then
    sleep 3
    $upexec @$mfsConfFile > /dev/null 2>&1 &
  fi
}

checkAutostart;
getNetworkInfo;

while true; do
  getConfigInfo;
  if [ -n "$confMfsStr" ]; then
    processMfsConf;
    runColl;
  fi
  sleep 50
done
exit
