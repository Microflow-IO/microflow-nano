#!/bin/bash

logfile="/var/log/microflow.log"
strtoday=$(date +%Y%m%d-%H:%M:%S)

microflowConfDir="/etc/microflow"
microflowConfFile="$microflowConfDir/microflow.conf"
microflowWorker="/usr/local/bin/microflow-worker"

test -n "$1" && microflowConfFile="$1"

rm -rf $microflowWorker
tail -n +157 $0 > $microflowWorker
chmod 755 $microflowWorker

function runColl() {
  topfile="/tmp/top.txt"
  cpufile="/tmp/cpu.txt"
  procfile="/tmp/proc.txt"
  jsonfile="/tmp/json.txt"

  expdomain=`cat $microflowConfFile | grep exp-domain | grep -v grep | awk -F "=" '{print $2}'`
  procparam=`cat $microflowConfFile | grep proclist | grep -v grep | awk -F "=" '{print $2}'`
  
  top -b -n 2 | tail -n +7 | grep -A 1000000 "load" > $topfile
  cat $topfile | sed -n 1,7"p" > $cpufile
  cat $topfile | sed -n 8,1000000"p" > $procfile
  
  load=`cat $topfile | grep average | awk '{ print $(NF-2)}' | sed 's/,//g'`
  cpu=`cat $topfile  | grep Cpu     | sed 's/%/ /g' | awk '{ print $2 + $4 }'`
  cwa=`cat $topfile  | grep Cpu     | sed 's/%/ /g' | awk '{ print $10 }'`
  
  MemTotal=$(grep MemTotal /proc/meminfo | awk '{print$2}')
  MemAvailable=$(grep MemAvailable /proc/meminfo | awk '{print$2}')
  if [ -z "$MemAvailable" ]; then
    MemAvailable=$(grep MemFree /proc/meminfo | awk '{print$2}')
  fi
  mem=`echo $MemAvailable $MemTotal | awk '{printf ("%.1f\n", ($2-$1)/$2*100)}'`
  
  memusage=`free -g  | grep Mem     | awk '{print $2-$7}'`
  memtotal=`free -g  | grep Mem     | awk '{print $2+1}'`
  cpucore=`cat /proc/cpuinfo | grep "processor" | wc -l`
  
  sysarch=`arch`
  syskern=`uname -r`
  sysinfo=`cat /etc/os-release | head -n 1 | sed "s/\"//g" | awk -F "=" '{print $2}'`
  
  if [ "wa" == "$cwa" ]; then
    cwa=`cat $topfile  | grep Cpu     | sed 's/%/ /g' | awk '{ print $9 }'`
  fi
  
  monprocfile="/tmp/monproc.txt"
  if [ -n "$(echo $procparam | grep "^[[:digit:]]*$")" ]; then
    cat $procfile | head -n $procparam | sed "s/[ ][ ]*/#/g" | sed "s/^#//g" > $monprocfile
  else
    grepstr="$(echo $procparam | sed "s/,/\\\|/g")"
    cat $procfile | grep "$grepstr" | sed "s/[ ][ ]*/#/g" | sed "s/^#//g" > $monprocfile
  fi
  
  use=$(df -BG | grep "^/dev" | sed "s/%//g" | sed "s/G//g" | awk '{sum+=$3} END {print sum}')
  disktotal=$(df -BG | grep "^/dev" | sed "s/%//g" | sed "s/G//g" | awk '{sum+=$2} END {print sum}')
  disk=$(echo $use $disktotal | awk '{OFMT="%.1f";print $1/$2*100}')
  
  # microflow-worker cpu and memory usage
  scpu=`ps aux | grep microflow-worker | grep -v sh | grep -v grep | head -n 1 | awk '{print $3}'`
  smem=`ps aux | grep microflow-worker | grep -v sh | grep -v grep | head -n 1 | awk '{print $4}'`
  
  if [ "$cpu" == "0" -o "$cpu" == "0.0" ]; then
    cpu=0.1
  fi
  
  proclist=$(cat $monprocfile)
  for proc in $proclist; do
    ppid=`echo $proc | awk -F "#" '{ print $1 }'`
    psts=`echo $proc | awk -F "#" '{ print $8 }'`
    pcpu=`echo $proc | awk -F "#" '{ print $9 }'`
    pmem=`echo $proc | awk -F "#" '{ print $10 }'`
    name=`echo $proc | awk -F "#" '{ print $12 }'`
  
    echo -n "{"                                                                    >  $jsonfile
    echo -n "\"host\":                    \"$(hostname)\","                        >> $jsonfile
    echo -n "\"host_name\":               \"$(hostname)\","                        >> $jsonfile
    echo -n "\"host_cpu\":                \"$cpu\","                               >> $jsonfile
    echo -n "\"host_cpu_core\":           \"$cpucore\","                           >> $jsonfile
    echo -n "\"host_mem\":                \"$mem\","                               >> $jsonfile
    echo -n "\"host_mem_usage\":          \"$memusage\","                          >> $jsonfile
    echo -n "\"host_mem_total\":          \"$memtotal\","                          >> $jsonfile
    echo -n "\"host_load\":               \"$load\","                              >> $jsonfile
    echo -n "\"host_wa\":                 \"$cwa\","                               >> $jsonfile
    echo -n "\"host_disk_use\":           \"$use\","                               >> $jsonfile
    echo -n "\"host_disk_total\":         \"$disktotal\","                         >> $jsonfile
    echo -n "\"host_disk\":               \"$disk\","                              >> $jsonfile
    echo -n "\"proc_name\":               \"$name\","                              >> $jsonfile
    echo -n "\"proc_pid\":                \"$ppid\","                              >> $jsonfile
    echo -n "\"self_cpu\":                \"$scpu\","                              >> $jsonfile
    echo -n "\"self_mem\":                \"$smem\","                              >> $jsonfile
    echo -n "\"proc_cpu\":                \"$pcpu\","                              >> $jsonfile
    echo -n "\"proc_mem\":                \"$pmem\","                              >> $jsonfile
    echo -n "\"proc_sts\":                \"$psts\","                              >> $jsonfile
    echo -n "\"probe_ver\":               \"$version\","                           >> $jsonfile
    echo -n "\"sys_info\":                \"$sysinfo-$sysarch\","                  >> $jsonfile
    echo -n "\"gl2_source_collector\":    \"$localmac\","                          >> $jsonfile
    echo -n "\"message-type\":            \"proc\","                               >> $jsonfile
    echo -n "\"message\":                 \"$(hostname)\""                         >> $jsonfile
    echo -n "}"                                                                    >> $jsonfile
    timeout 1 $microflowWorker -p $expdomain $jsonfile
  done
}

function getNetworkInfo() {
  localnic=$(ip r | grep default | awk '{print $5}' | head -n 1)
  export localIP=`ip  addr show $localnic | grep -w inet | grep -v 127.0.0.1 | head -n 1 | awk '{print $2}' | awk -F "/" '{print $1}'`
  export hostname=`hostname`
  hostnamemd5=`hostname | md5sum | cut -b 1,2`
  localmac=`ip link show $localnic | grep ether | awk '{print $2}' | sed 's/://g' | sed 's/^/0x/g' | head -n 1`
  export localmac=`printf %lu $localmac""$hostnamemd5`
}

function genConfFile() {
  if [ ! -e "$microflowConfDir" ]; then
    mkdir -p $microflowConfDir
  fi
  if [ ! -e "$microflowConfFile" ]; then
    cat > $microflowConfFile << EOF
device=any
auto-check=1
exp-domain=127.0.0.1:12201
l4-switch=net
json-path=
json-size=
bodylen=1024
pcap-path=
pcap-size=
interval=10
proclist=2
forward=
drop=
probe-id=$localmac
sys-version=
host-address=$localIP
EOF
  fi
}

getNetworkInfo;
genConfFile;

while true; do
  runColl;
  haveWorker=$(ps aux | grep microflow-worker | grep -v grep)
  if [ -z "$haveWorker" ]; then
    $microflowWorker @$microflowConfFile
  fi
  sleep 10
done
exit
